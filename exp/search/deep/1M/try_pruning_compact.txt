第一次在1M上跑 效果一般般啊 recall没有其他的好 而且还有bug的样子
Load vecs from: ../data/deep10M.fvecs
# of vecs: 1000000
Loading Groundtruth from../groundtruth/deep_benchmark-groundtruth-deep-1m-num1000-k10.arbitrary.cvs...    Done!
index K:
vertex in set: {8}
ef construction:
vertex in set: {100}
search ef:
vertex in set: {16, 64, 256}

Save result to :../exp/search/benchmark-Benchmark-Compact-deep-1000000.csv
Method: Compact
parameters: ef_construction ( 100 )  index-k( 8)  ef_max (500) 
Building Index using IndexCompactGraph

All the forward batch nn #: 21400003
Theoratical backward batch nn #: 21400003
Sum of forward batch nn #: 30576967
Max. forward batch nn #: 0
Avg. forward nn #: 30.577
Avg. forward batch #: 3.29016
Avg. delta nn #: 30.577
Forward batch: 0[(0,494878,504640,999999)]
vertex in set: {525880, 504640, 478085, 468234, 494878, 43109, 57753, 521229, 50724, 390834, 664164, 722440, 320618, 528487, 373691, 834025}

Forward batch: 1[(390835,498707,510755,586007)]
vertex in set: {498689, 495350, 473494, 498707, 452194, 440557, 513869, 419466, 407895, 545256, 510755}

Forward batch: 2[(473495,499652,500503,510754)]
vertex in set: {500914, 500503, 481355, 500506, 473542, 482236, 474592, 479616, 475235, 499652, 486930, 499487}

Forward batch: 3[(486931,500000,2147483647,500913)]
vertex in set: {490409, 491719, 490300}


# Build Index Time: 806.2608220s
Total # of Neighbors: 30576967

Search ef: 16
========================
range: 1000      recall: 0.0119  QPS: 167842    Comps: 7         Internal Search Time: 0.0060    CalDist Time: 0.0031
range: 5000      recall: 0.3721  QPS: 29438     Comps: 80        Internal Search Time: 0.0340    CalDist Time: 0.0238
range: 10000     recall: 0.5609  QPS: 24095     Comps: 120       Internal Search Time: 0.0415    CalDist Time: 0.0311
range: 50000     recall: 0.6813  QPS: 16132     Comps: 213       Internal Search Time: 0.0620    CalDist Time: 0.0512
range: 100000    recall: 0.6648  QPS: 14349     Comps: 249       Internal Search Time: 0.0697    CalDist Time: 0.0590
range: 500000    recall: 0.5831  QPS: 12570     Comps: 298       Internal Search Time: 0.0796    CalDist Time: 0.0698
range: 1000000   recall: 0.6774  QPS: 11747     Comps: 351       Internal Search Time: 0.0851    CalDist Time: 0.0767
========================
# total query time: 0.3851480s

Search ef: 64
========================
range: 1000      recall: 0.0147  QPS: 110314    Comps: 11        Internal Search Time: 0.0091    CalDist Time: 0.0047
range: 5000      recall: 0.6228  QPS: 12049     Comps: 186       Internal Search Time: 0.0830    CalDist Time: 0.0534
range: 10000     recall: 0.7987  QPS: 9945      Comps: 267       Internal Search Time: 0.1006    CalDist Time: 0.0703
range: 50000     recall: 0.8960  QPS: 6635      Comps: 489       Internal Search Time: 0.1507    CalDist Time: 0.1188
range: 100000    recall: 0.8782  QPS: 5739      Comps: 579       Internal Search Time: 0.1742    CalDist Time: 0.1421
range: 500000    recall: 0.8415  QPS: 4971      Comps: 705       Internal Search Time: 0.2012    CalDist Time: 0.1737
range: 1000000   recall: 0.8849  QPS: 4540      Comps: 832       Internal Search Time: 0.2203    CalDist Time: 0.1955
========================
# total query time: 0.9464290s

Search ef: 256
========================
range: 1000      recall: 0.0152  QPS: 107538    Comps: 12        Internal Search Time: 0.0093    CalDist Time: 0.0048
range: 5000      recall: 0.7521  QPS: 4089      Comps: 519       Internal Search Time: 0.2446    CalDist Time: 0.1431
range: 10000     recall: 0.9037  QPS: 3291      Comps: 733       Internal Search Time: 0.3038    CalDist Time: 0.1948
range: 50000     recall: 0.9732  QPS: 2168      Comps: 1362      Internal Search Time: 0.4613    CalDist Time: 0.3436
range: 100000    recall: 0.9686  QPS: 1925      Comps: 1634      Internal Search Time: 0.5195    CalDist Time: 0.4046
range: 500000    recall: 0.9561  QPS: 1661      Comps: 2065      Internal Search Time: 0.6019    CalDist Time: 0.5040
range: 1000000   recall: 0.9704  QPS: 1483      Comps: 2447      Internal Search Time: 0.6742    CalDist Time: 0.5819
========================
# total query time: 2.8225050s


bug 修复完之后好像更差了 无语
Load vecs from: ../data/deep10M.fvecs
# of vecs: 1000000
Loading Groundtruth from../groundtruth/deep_benchmark-groundtruth-deep-1m-num1000-k10.arbitrary.cvs...    Done!
index K:
vertex in set: {8}
ef construction:
vertex in set: {100}
search ef:
vertex in set: {16, 64, 256}

Save result to :../exp/search/benchmark-Benchmark-Compact-deep-1000000.csv
Method: Compact
parameters: ef_construction ( 100 )  index-k( 8)  ef_max (500) 
Building Index using IndexCompactGraph
First point340710

All the forward batch nn #: 21396517
Theoratical backward batch nn #: 21396517
Sum of forward batch nn #: 30222137
Max. forward batch nn #: 0
Avg. forward nn #: 30.2221
Avg. forward batch #: 3.27276
Avg. delta nn #: 30.2221
Forward batch: 0[(0,499487,528487,999999)]
vertex in set: {540978, 57753, 499487, 47689, 390834, 584168, 320618, 719617, 528487, 373691, 920197}

Forward batch: 1[(499488,499652,513869,719616)]
vertex in set: {499652, 541130, 513869, 697373, 650686, 586008, 629005, 667676, 604578}

Forward batch: 2[(499488,500000,510755,513868)]
vertex in set: {513699, 510755}


# Build Index Time: 814.6823080s
Total # of Neighbors: 30222137

Search ef: 16
========================
range: 1000      recall: 0.0084  QPS: 172592    Comps: 7         Internal Search Time: 0.0058    CalDist Time: 0.0030
range: 5000      recall: 0.3533  QPS: 29339     Comps: 81        Internal Search Time: 0.0341    CalDist Time: 0.0234
range: 10000     recall: 0.5534  QPS: 23802     Comps: 120       Internal Search Time: 0.0420    CalDist Time: 0.0312
range: 50000     recall: 0.6642  QPS: 16368     Comps: 207       Internal Search Time: 0.0611    CalDist Time: 0.0501
range: 100000    recall: 0.6545  QPS: 14566     Comps: 241       Internal Search Time: 0.0687    CalDist Time: 0.0577
range: 500000    recall: 0.5893  QPS: 12968     Comps: 283       Internal Search Time: 0.0771    CalDist Time: 0.0674
range: 1000000   recall: 0.6729  QPS: 11774     Comps: 348       Internal Search Time: 0.0849    CalDist Time: 0.0767
========================
# total query time: 0.3815320s

Search ef: 64
========================
range: 1000      recall: 0.0110  QPS: 117758    Comps: 11        Internal Search Time: 0.0085    CalDist Time: 0.0043
range: 5000      recall: 0.6095  QPS: 11937     Comps: 188       Internal Search Time: 0.0838    CalDist Time: 0.0538
range: 10000     recall: 0.7970  QPS: 9877      Comps: 266       Internal Search Time: 0.1012    CalDist Time: 0.0705
range: 50000     recall: 0.8846  QPS: 6691      Comps: 477       Internal Search Time: 0.1494    CalDist Time: 0.1173
range: 100000    recall: 0.8785  QPS: 5914      Comps: 557       Internal Search Time: 0.1691    CalDist Time: 0.1375
range: 500000    recall: 0.8334  QPS: 5253      Comps: 667       Internal Search Time: 0.1904    CalDist Time: 0.1640
range: 1000000   recall: 0.8898  QPS: 4673      Comps: 823       Internal Search Time: 0.2140    CalDist Time: 0.1907
========================
# total query time: 0.9240620s

Search ef: 256
========================
range: 1000      recall: 0.0113  QPS: 110387    Comps: 11        Internal Search Time: 0.0091    CalDist Time: 0.0045
range: 5000      recall: 0.7462  QPS: 4261      Comps: 519       Internal Search Time: 0.2347    CalDist Time: 0.1368
range: 10000     recall: 0.9065  QPS: 3302      Comps: 729       Internal Search Time: 0.3028    CalDist Time: 0.1923
range: 50000     recall: 0.9712  QPS: 2235      Comps: 1328      Internal Search Time: 0.4475    CalDist Time: 0.3308
range: 100000    recall: 0.9729  QPS: 1983      Comps: 1572      Internal Search Time: 0.5042    CalDist Time: 0.3888
range: 500000    recall: 0.9534  QPS: 1718      Comps: 1951      Internal Search Time: 0.5820    CalDist Time: 0.4853
range: 1000000   recall: 0.9682  QPS: 1506      Comps: 2403      Internal Search Time: 0.6642    CalDist Time: 0.5758
========================
# total query time: 2.7523350s
